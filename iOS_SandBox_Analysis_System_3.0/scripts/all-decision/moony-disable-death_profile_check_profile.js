/**
 * Copyright (c) 2017 moony li of @Flyic.
 *2017-05-27

 2017-09-19 implementation
**/



'use strict';


(function () {

var decision_conf = require("./decision_conf.js");
var pd = require('pretty-data').pd;
var traverse = require('traverse');
var chalk = require('chalk');
//npm install chalk





exports.deathProfileCheckProfileByPlistStr = function(plistStr) 
{

	var xml_parser = require('./utility_xml_parser.js');
	var plistObj = xml_parser.parseXML(plistStr);
	//console.log("deathProfileCheckProfileByPlistStr:\tshow xml parsed result:\r\n");
	//console.log(plistObj);
	//const x509 = require('x509');
	//var issuer = x509.getIssuer(fs.readFileSync('./certs/your.crt').toString());
	//fs.readFileSync(".\/1\/waitui013.51pgzsh5.mobileconfig", 'utf8');
	//var issuer = x509.getIssuer(".\/1\/waitui013.51pgzsh5.mobileconfig");

	return exports.deathProfileCheckProfileByObjJson(plistObj);
}


exports.deathProfileCheckProfileByStrJson = function(plistObjStr) 
{

	//console.log("deathProfileCheckProfileByStrJson:\tstr\r\n%s",plistObjStr);
	
	//Method1:
	var plistObj = eval('(' + plistObjStr + ')');
    //console.log("deathProfileCheckProfileByStrJson:\tobj\r\n");
    //console.log(pd.json(plistObj));
	//Method2:
	//var plistObj = JSON.parse(plistObjStr);
	return exports.deathProfileCheckProfileByObjJson(plistObj);
}


 

//npm install traverse
//function deathProfileCheckProfileByObjJson (plistObj) 
exports.deathProfileCheckProfileByObjJson = function(plistObj) 
{
	//console.log("deathProfileCheckProfileByObjJson:\tplistObj\r\n");
    //console.log(pd.json(plistObj));

	var evidenceInBrief = {};
	var retInfo={};

	var payloadContent = {};
 
	//Traverse every node in json object
	traverse(plistObj).forEach(function (x) 
	{
		
		if (x.hasOwnProperty("PayloadContent"))
		{
			evidenceInBrief.PayloadRemovalDisallowed = x.PayloadRemovalDisallowed;
			payloadContent = x.PayloadContent;
			
		}
	    
	});

	 
	
	var nDeathWebClipCount= 0;
	evidenceInBrief.malicousPaylaodContent = []
	if (payloadContent)
	{
		
		//console.log(payloadContent);
		for (var i=0;i<payloadContent.length;i++)
		{
			var payload = payloadContent[i];
			//console.log(payload);
			if (1
				&& payload.hasOwnProperty("PayloadType")
				&& -1 < payload.PayloadType.search('com.apple.webClip.managed')
				)
			{
				//console.log(payload);
				var payloadTemp = {};
				
				payloadTemp.PayloadType = payload.PayloadType;
				if (payload.hasOwnProperty("IsRemovable") )
				{
					if ( payload.IsRemovable == false)
					{
						payloadTemp.IsRemovable = payload.IsRemovable;
						payloadTemp.score = decision_conf.MALICIOUS_VALUE;
						evidenceInBrief.malicousPaylaodContent.push(payloadTemp);
						nDeathWebClipCount = nDeathWebClipCount +1;
					}
				}
				else
				{	
					if (evidenceInBrief.hasOwnProperty("PayloadRemovalDisallowed"))
					{
						if (evidenceInBrief.PayloadRemovalDisallowed == 1)
						{
							payloadTemp.score = decision_conf.MALICIOUS_VALUE;
							evidenceInBrief.malicousPaylaodContent.push(payloadTemp);
							nDeathWebClipCount = nDeathWebClipCount +1;
						}
					}

				}
				
				

			}
		}//end of for

		evidenceInBrief.maliciousPayloadNum = nDeathWebClipCount;

	}

	retInfo.score = nDeathWebClipCount*decision_conf.MALICIOUS_VALUE;
	if (decision_conf.judgeIsMalious(retInfo.score))
	{
		
        
        retInfo.behavior = "Death Profile";
        retInfo.description = "install malicous profile to create unremovable web clip ICON in your phone screen to ransome users ";
        
        retInfo.decision = decision_conf.judge_n2s(retInfo.score);
      	retInfo.evidences = [];
      	retInfo.evidencesInBrief = [];

      
        retInfo.evidencesInBrief.push(evidenceInBrief);
		//console.log(retInfo);
		
	}
	return retInfo;
}


//////////////Test zone

function heredoc(fn) {
    return fn.toString().split('\n').slice(1,-1).join('\n') + '\n'
}


exports.testDecideProfileStr = function() 
{
	var fs = require('fs');
	
	//var plistObjStr=JSON.stringify(tmpStr);
	
	//var tmpStr = fs.readFileSync(".\/1\/profileJsonBad.txt", 'utf8');
	//var tmpStr = fs.readFileSync(".\/1\/main.51pgzsh5.mobileconfig", 'utf8');
	//var tmpStr = fs.readFileSync(".\/1\/main.51pgzsh5.mobileconfig-remove-sign", 'utf8');
	var tmpStr = fs.readFileSync(".\/1\/waitui013.51pgzsh5.mobileconfig", 'utf8');


	console.log(tmpStr);
	console.log("testDecideProfileStr:\t\r\n"+tmpStr);
	//var retInfo = exports.deathProfileCheckProfileByStrJson(tmpStr);	
	var retInfo = exports.deathProfileCheckProfileByPlistStr(tmpStr);
	console.log("testDecideProfileStr:\tshow retInfo:");
	if (retInfo.hasOwnProperty("score") && decision_conf.judgeIsMalious(retInfo.score))
	{
		console.log(chalk.red(pd.json(retInfo)));	
	}
	else
	{
		console.log(chalk.green(pd.json(retInfo)));
	}
	
}

})();


exports.testDecideProfileStr();

 