/**
 * Copyright (c) 2017 moony li of @Flyic.
 *2017-05-27

 2017-09-19 implementation
**/



'use strict';


(function () {

var pd = require('pretty-data').pd;
var traverse = require('traverse');
var chalk = require('chalk');
var decision_conf = require("./decision_conf.js");
var nvwastone_steps = -1;


exports.jailbreakcheck = function(jsonObj)
{
	var evidenceInBrief = {};
	var retInfo={};
	//console.log(jsonObj);
	var jsonStr = JSON.stringify(jsonObj);
	if ( 1
		&&-1 < jsonObj.method.search(/IOServiceOpen|IOConnectCallScalarMethod/)
		&& -1 < jsonObj.lib.search("IOKit")
		&& jsonObj.artifact.length >= 3
		)
	{

        retInfo.evidences = [];
	    if (jsonObj.method.search(/IOServiceOpen/) > -1){
            if (jsonObj.artifact[0].value.search(/AppleMobileADBE0/)!=-1 && jsonObj.artifact[1].value.search(/0x0/)!=-1) {

                var data = {};
	            data.name = "openService";
	            data.value = jsonObj;
                retInfo.evidences.push(data);
                retInfo.score = decision_conf.SUSPICIOUS_HIGH_VALUE;
                nvwastone_steps = 1;
            }
	    }

        if (jsonObj.method.search(/IOConnectCallScalarMethod/) > -1){
            if (jsonObj.artifact[1].value.search(/0x4/)!=-1 && jsonObj.artifact[2].value.search(/0x0/)!=-1 && jsonObj.artifact[2].value.search(/0/)!=-1 && nvwastone_steps == 1) {
                retInfo.behavior = "JailBreak Toolkit";
                retInfo.description = "NvwaStone";

                var data = {};
	            data.name = "IOConnectCallScalarMethod";
	            data.value = jsonObj;
                retInfo.evidences.push(data);
                retInfo.score = decision_conf.MALICIOUS_VALUE;
                nvwastone_steps += 1;
            }
	    }

	}
	return retInfo;
};




})();


